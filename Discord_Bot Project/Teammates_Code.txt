import discord
from discord import guild
from discord.ext import commands
import json as jason
import datetime
import asyncio

bot = commands.Bot(command_prefix='b!', description='Birthday Bot!!')
token = "Nzc4NzA2NDYyMTAwODE1OTEz.X7V46A.-dRtyw_GoZChN4Bwt3ba1d81JWY"


@bot.event
async def on_ready():
    print("Bot Is Online.")


async def check_for_birthday(self):
    await self.wait_until_ready()
    now = datetime.datetime.now()
    curmonth = now.month
    curday = now.day

    while not self.is_closed():
        with open('birthdays.json', 'r') as f:
            var = jason.load(f)
            for member in var:
                if member['month'] == curmonth:
                    if member['day'] == curday:
                        try:
                            await bot.get_user(member).send("Happy birthday!")
                        except:
                            pass
                        success = False
                        index = 0
                        while not success:
                            try:
                                await guild.channels[index].send(f"Happy birthday to <@{member}>!")
                            except discord.Forbidden:
                                index += 1
                            except AttributeError:
                                index += 1
                            except IndexError:
                                # if the server has no channels, doesn't let the bot talk, or all vc/categories
                                pass
                            else:
                                success = True
        await asyncio.sleep(86400)  # task runs every day


@bot.event
async def on_guild_join(guild):
    # Loop through all channels until a good channel is found. Implemented due to removal of default channel
    success = False
    index = 0
    while not success:
        try:
            await guild.channels[index].send(
                "Hello! I'm a bot for tracking your birthdays! Get started with `b!help` and `b!setbirthday`.")
        except discord.Forbidden:
            index += 1
        except AttributeError:
            index += 1
        except IndexError:
            # if the server has no channels, doesn't let the bot talk, or all vc/categories
            pass
        else:
            success = True


@bot.command()
async def ping(ctx):
    # Check if bot is working.
    await ctx.send("Pong. I work.")


@bot.command()
async def setbirthday(ctx, data):
    # Set a birthday.
    member = ctx.message.author.id

    def check(user):
        return user == ctx.message.author and user == ctx.message.channel

    msg = data
    list = msg.split("/")
    list[0] = int(list[0])
    list[1] = int(list[1])

    if list[0] > 13 or list[0] < 1:
        await ctx.send("Invalid date.")
        await ctx.send("Aborting...")
        return
    else:
        pass

    if list[0] in (1, 3, 5, 7, 8, 10, 12):
        if list[1] > 31 or list[1] < 1:
            await ctx.send("Invalid date.")
            await ctx.send("Aborting...")
            return
        else:
            pass
    elif list[0] in (4, 6, 9, 11):
        if list[1] > 30 or list[1] < 1:
            await ctx.send("Invalid date.")
            await ctx.send("Aborting...")
            return
        else:
            pass
    elif list[0] == 2:
        if list[1] > 29 or list[1] < 1:
            await ctx.send("Invalid date.")
            await ctx.send("Aborting...")
            return
        else:
            pass
    else:
        await ctx.send("Invalid date.")
        await ctx.send("Aborting...")
        return

    list = msg.split("/")
    month = list[0]
    day = list[1]
    await ctx.send("Your birthday has been set to " + month + "/" + day)

    with open('./birthdays.json', 'r+') as f:
        var = jason.load(f)
        var[member] = {'month': month, 'day': day}
        jason.dump(var, f, indent=4)

bot.run(token)
asyncio.create_task(check_for_birthday())
