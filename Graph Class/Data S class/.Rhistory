install.packages("tuber")
library(tuber) # youtube API
library(magrittr) # Pipes %>%, %T>% and equals(), extract().
library(tidyverse) # all tidyverse packages
library(purrr) # package for iterating/extracting data
library(tuber)
library(magrittr)
library(tidyverse)
library(purrr)
install.packages('devtools')
library(devtools)
devtools::install_github("soodoku/tuber")
library(tuber)
setwd("C:\Users\luisr\Desktop\Data S class")
setwd("C:/Users/luisr/Desktop/Data S class")
client_id <- "943198196745-qfe691qav9i89cc0fdb5fprlmlbp0o2e.apps.googleusercontent.com"
client_secret <- "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"
yt_oauth(client_id,client_secret,token = '')
yt_oauth(client_id,client_secret,token = '')
client_id <- "943198196745-qfe691qav9i89cc0fdb5fprlmlbp0o2e.apps.googleusercontent.com"
client_secret <- "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"
yt_oauth(client_id,client_secret,token = '')
yt_oauth(client_id,client_secret,token = '')
yt_oauth(client_id,client_secret,token = '')
yt_oauth(client_id,client_secret,token = '')
client_id <- "943198196745-gvccrrkopeu0g40hm4huvpe8vpgsh97t.apps.googleusercontent.com"
client_secret <- "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"
yt_oauth(client_id,client_secret,token = '')
get_stats(video_id = "UOxkGD8qRB4")
get_video_details(video_id = "UOxkGD8qRB4")
search_result <- yt_search("League of Legends")
comments <- get_comment_threads(c(video_id = "UOxkGD8qRB4"))
View(comments)
write.csv(comments, file = 'YoutubeVideoComments.csv')
install.packages('tm')
library(tm)
install.packages('SnowballC')
library(SnowballC)
install.packages('wordcloud')
library(wordcloud)
comments_corp = Corpus(VectorSource(comments$textOriginal))
comments_DTM = DocumentTermMatrix(comments_corp, control = list(removePunctuation=T, removeNumbers=T, stopwords=T))
as.matrix(comments_DTM[,1:5])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
as.matrix(comments_DTM[,1:8])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
as.matrix(comments_DTM[,1:20])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
as.matrix(comments_DTM[,2:5])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
as.matrix(comments_DTM[,1:5])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
get_stats(video_id = "UOxkGD8qRB4")
get_video_details(video_id = "UOxkGD8qRB4")
search_result <- yt_search("League of Legends")
View(search_result)
comments <- get_comment_threads(c(video_id = "UOxkGD8qRB4"))
View(comments)
write.csv(comments, file = 'YoutubeVideoComments.csv')
install.packages('tm')
library(tm)
install.packages('SnowballC')
library(SnowballC)
install.packages('wordcloud')
library(wordcloud)
install.packages("SnowballC")
install.packages("wordcloud")
comments_corp = Corpus(VectorSource(comments$textOriginal))
comments_DTM = DocumentTermMatrix(comments_corp, control = list(removePunctuation=T, removeNumbers=T, stopwords=T))
as.matrix(comments_DTM[,1:5])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
View(comments_corp)
View(comments_DTM)
View(comments)
View(search_result)
View(search_result)
View(comments_DTM)
write.csv(comments, file = 'KDAComments.csv')
get_stats(video_id = "UOxkGD8qRB4")
get_video_details(video_id = "UOxkGD8qRB4")
search_result <- yt_search("League of Legends")
View(search_result)
get_stats(video_id = "1Z6CHioIn3s")
get_video_details(video_id = "1Z6CHioIn3s")
search_result <- yt_search("League of Legends")
View(search_result)
comments <- get_comment_threads(c(video_id = "1Z6CHioIn3s"))
View(comments)
write.csv(comments, file = 'BurnItAllDownComments.csv')
comments_corp = Corpus(VectorSource(comments$textOriginal))
comments_DTM = DocumentTermMatrix(comments_corp, control = list(removePunctuation=T, removeNumbers=T, stopwords=T))
as.matrix(comments_DTM[,1:5])
comments_terms=colSums(as.matrix(comments_DTM))
comments_terms_matrix = as.matrix(comments_terms)
comments_terms_matrix
wordcloud(words=names(comments_terms), freq = comments_terms, vfont=c('serif', 'bold italic'), color=1:nrow(comments_terms_matrix))
